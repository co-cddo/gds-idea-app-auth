name: PR Checks

on:
  pull_request:
    branches: [main, dev]

jobs:
  version-check:
    name: Check Version Bump
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check version has been bumped
        run: |
          # Get version from PR branch
          PR_VERSION=$(grep -oP '^version = "\K[^"]*' pyproject.toml)

          # Get version from base branch
          git fetch origin ${{ github.base_ref }}
          BASE_VERSION=$(git show origin/${{ github.base_ref }}:pyproject.toml | grep -oP '^version = "\K[^"]*')

          echo "Base version: $BASE_VERSION"
          echo "PR version: $PR_VERSION"

          if [ "$PR_VERSION" == "$BASE_VERSION" ]; then
            echo "❌ Version in pyproject.toml has not been bumped"
            echo "Current version: $PR_VERSION"
            echo "Please update the version in pyproject.toml"
            exit 1
          fi

          echo "✅ Version bumped from $BASE_VERSION to $PR_VERSION"

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run ruff check
        run: uv run ruff check .

      - name: Run ruff format check
        run: uv run ruff format --check .

  test:
    name: Test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13", "3.14"]
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run tests with coverage
        run: uv run pytest --cov --cov-report=term-missing

  docs:
    name: Build Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Build documentation
        run: uv run mkdocs build --strict

  build:
    name: Build Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Build package
        run: uv build

      - name: Check build artifacts
        run: |
          ls -lh dist/
          echo "✅ Package built successfully"
